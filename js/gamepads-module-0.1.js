export default function(t,g){const u=8;const b=36;const m=.04;globalThis.addEventListener(`gamepadconnected`,()=>{});t.env.getGamepads=n=>{const t=navigator.getGamepads();const e=g?g.memory:wasm_memory;const a=new Float32Array(e.buffer);const s=new Uint32Array(e.buffer);const o=new Uint8Array(e.buffer);for(const[r,i]of t.slice(0,u).entries()){let t=n+b*r+1;if(!i||!i.connected||i.mapping!=="standard"){o[t]=0;continue}o[t++]=1;o[t++]=i.buttons.length;o[t++]=i.axes.length;let e=0;for(const[c,f]of i.buttons.entries()){if(c<17&&f.pressed)e|=1<<c}s[t/4]=e;t+=4;for(const[c,d]of i.axes.slice(0,6).entries()){if(c<4){const l=c===1||c===3?-1:1;a[t/4]=Math.abs(d)<m?0:l*(d-Math.sign(d)*m)/(1-m)}else{if(Math.abs(d)<.05&&a[t/4]<.05){}else{a[t/4]=Math.abs(d)+1<m?0:(d+1)*.5}}t+=4}}};t.env.playEffect=(e,t,n,a,s)=>{const o=navigator.getGamepads().find(t=>t?.index===e);o?.vibrationActuator?.playEffect("dual-rumble",{duration:t,startDelay:n,strongMagnitude:a,weakMagnitude:s})}}
